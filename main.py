print("Hello World!")

print("Hello Dizz!")
# SSH - позволяет удалённо управлять компьютером, а также безопасно обмениваться данными с ним (ТСР - туннелирование)
# GIT - Система Контроля Версий
# GitHub - Это сайт для Прогеров
# git репозиторий - это наш проект
# Изначально git не знает что эта папка должна иметь контроль версий

# git init - инициализирует git репозиторий
# git status - показывает текущий статус файлов(что изменено, добавлено и т.д.)
# git add путь_к_файлу - собирает файлы в которых произошли изменения
# git commit -m "сообщение" - подписывает изменения комментарием
# git log - позволяет просмотреть все существующие коммите
# git diff - различия между текущими изменениями и последним коммитом
# git restore путь_к_файлу - удаляет несохраненные изменения
# git reset --soft HEAD~1 - отменяет последний коммит, но не удаляет. можно
#                           закоммитить обратно
# git reset --hard HEAD~1 - отменяет последний коммит, и изменяет файлы
# git reset --mixed HEAD~1 - отменяет последний коммит, но оставляет файлы. можно
#                           закоммитить обратно
# git revert хеш_коммита - отменяет нужный коммент указанный в хеше и заменяет его
# git remote add название_подключения ссылка_на_репозиторий
# git remote remove название_подключения
# git push название_подключения название_ветки


# Ветки 
# git branch - показывает все локальные ветки(то есть те, которые на компе)
# git branch -r - показывает все удалённые ветки(с Github-репо например)
# git branch -a - показывает все папки

# Когда на удалённом репозиторий создаются новые ветки, их нужно получить у себя локально
# git fetch - получает новые ветки из удалённого репозитория